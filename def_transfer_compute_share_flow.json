{
    "flow_definition": {
        "Comment": "Transfer, process and distribute/share files",
        "StartAt": "TransferRaw",
        "States": {
            "TransferRaw": {
                "Comment": "Transfer raw data to a compute (funcX) endpoint",
                "Type": "Action",
                "ActionUrl": "https://actions.automate.globus.org/transfer/transfer",
                "Parameters": {
                    "source_endpoint_id.$": "$.input.source.id",
                    "destination_endpoint_id.$": "$.input.destination.id",
                    "transfer_items": [
                        {
                            "source_path.$": "$.input.source.path",
                            "destination_path.$": "$.input.destination.path",
                            "recursive.$": "$.input.recursive_tx"
                        }
                    ]
                },
                "ResultPath": "$.TransferRaw",
                "WaitTime": 60,
                "Next": "ProcessFiles"
            },
            "ProcessFiles": {
                "Comment": "Process files by invoking a funcX function",
                "Type": "Action",
                "ActionUrl": "https://automate.funcx.org",
                "ActionScope": "https://auth.globus.org/scopes/b3db7e59-a6f1-4947-95c2-59d6b7a70f8c/action_all",
                "Parameters": {
                    "tasks": [
                        {
                            "function.$": "$.input.funcx_function_id",
                            "endpoint.$": "$.input.funcx_endpoint_id",
                            "payload.$": "$.input.funcx_function_payload"
                        }
                    ]
                },
                "ResultPath": "$.ProcessFiles",
                "WaitTime": 300,
                "Next": "TransferResults"
            },
            "TransferResults": {
                "Comment": "Transfer processed files to a guest collection",
                "Type": "Action",
                "ActionUrl": "https://actions.automate.globus.org/transfer/transfer",
                "Parameters": {
                    "source_endpoint_id.$": "$.input.destination.id",
                    "destination_endpoint_id.$": "$.input.resultshare.id",
                    "transfer_items": [
                        {
                            "source_path.$": "$.input.destination.path",
                            "destination_path.$": "$.input.resultshare.path",
                            "recursive.$": "$.input.recursive_tx"
                        }
                    ]
                },
                "ResultPath": "$.TransferResults",
                "WaitTime": 60,
                "Next": "ShareResultFiles"
            },
            "ShareResultFiles": {
                "Comment": "Grant read permission on the data to a Globus user or group",
                "Type": "Action",
                "ActionUrl": "https://actions.automate.globus.org/transfer/set_permission",
                "Parameters": {
                    "endpoint_id.$": "$.input.resultshare.id",
                    "path.$": "$.input.resultshare.path",
                    "operation": "CREATE",
                    "permissions": "r",
                    "principal_type.$": "$.input.principal_type",
                    "principal.$": "$.input.principal_identifier"
                },
                "ResultPath": "$.ShareResultFiles",
                "End": True
            }
        }
    },
    "input_schema": {
        "required": [
            "input"
        ],
        "properties": {
            "input": {
                "type": "object",
                "required": [
                    "source",
                    "destination",
                    "recursive_tx",
                    "funcx_function_id",
                    "funcx_endpoint_id",
                    "funcx_function_payload",
                    "resultshare",
                    "principal_identifier",
                    "principal_type"
                ],
                "properties": {
                    "source": {
                        "type": "object",
                        "title": "Select source collection and path",
                        "description": "The raw data collection and path (e.g., on the instrument).",
                        "format": "globus-collection",
                        "required": [
                            "id",
                            "path"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "path": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": False
                    },
                    "destination": {
                        "type": "object",
                        "title": "Select destination collection and path",
                        "description": "The collection and path on the funcX endpoint.",
                        "format": "globus-collection",
                        "required": [
                            "id",
                            "path"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "path": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": False
                    },
                    "recursive_tx": {
                        "type": "boolean",
                        "title": "Recursive transfer",
                        "description": "Whether or not to transfer recursively, must be true when transferring a directory.",
                        "default": True
                    },
                    "funcx_function_id": {
                        "type": "string",
                        "format": "uuid",                        
                        "title": "funcX function ID",
                        "description": "The UUID of the function to invoke; must be registered with the funcX service.",
                        "properties": {},
                        "additionalProperties": False
                    },
                    "funcx_endpoint_id": {
                        "type": "string",
                        "format": "uuid",                        
                        "title": "funcX endpoint ID",
                        "description": "The UUID of the funcX endpoint where the function will run.",
                        "properties": {},
                        "additionalProperties": False
                    },
                    "funcx_function_payload": {
                        "type": "object",
                        "title": "Payload",
                        "description": "Inputs to pass to the function.",
                        "properties": {},
                        "additionalProperties": True
                    },
                    "resultshare": {
                        "type": "object",
                        "title": "Results sharing destination collection and path",
                        "description": "The collection and path for sharing the result files.",
                        "format": "globus-collection",
                        "required": [
                            "id",
                            "path"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "path": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": False
                    },
                    "principal_type": {
                        "type": "string",
                        "title": "Type of principal to share with",
                        "description": "Specifies whether files are being shared with a user ('identity') or a group ('group'); default is 'group'.",
                        "enum": [
                            "identity",
                            "group"
                        ],
                        "default": "group"
                    },
                    "principal_identifier": {
                        "type": "string",
                        "title": "UUID of user identity or group",
                        "description": "The user or group id to share with; default is 'Tutorial Users' group.",
                        "format": "uuid",
                        "default": "50b6a29c-63ac-11e4-8062-22000ab68755"
                    }
                },
                "additionalProperties": False
            }

        },
        "additionalProperties": False
    }
}